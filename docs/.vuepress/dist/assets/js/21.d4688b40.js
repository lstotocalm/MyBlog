(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{196:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"分布式工作流程（多人开发流程）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式工作流程（多人开发流程）"}},[t._v("#")]),t._v(" 分布式工作流程（多人开发流程）")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("集中式工作流\n简介：只有一个仓库；\n特点：当两个工作者都有提交时，第一个工作者会成功提交，第二个则失败，需要拉取第一个工作者的代码")])]),t._v(" "),s("li",[s("p",[t._v("集成管理者工作流\n简介：多个仓库（有一个主仓库）；\n特点：每个开发者拥有自己仓库的写权限和其他所有人仓库的读权限。\n具体开发流程：")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  1. 项目维护者推送到主仓库。\n  2. 贡献者克隆此仓库，做出修改。\n  3. 贡献者将数据推送到自己的公开仓库。\n  4. 贡献者给维护者发送邮件，请求拉取自己的更新。\n  5. 维护者在自己本地的仓库中，将贡献者的仓库加为远程仓库并合并修改。\n  6. 维护者将合并后的修改推送到主仓库。\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("司令官与副官工作流\n简介：多个主仓库（多个管理者）；\n特点：多仓库工作流程的变种\n具体开发流程：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  1. 普通开发者在自己的特性分支上工作，并根据 master 分支进行变基。 这里是司令官的 master 分支。\n  2. 副官将普通开发者的特性分支合并到自己的 master 分支中。\n  3. 司令官将所有副官的 master 分支并入自己的 master 分支中。\n  4. 司令官将集成后的 master 分支推送到参考仓库中，以便所有其他开发者以此为基础进行变基。\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);