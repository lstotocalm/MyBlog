(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{185:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"status-diff-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#status-diff-commit"}},[t._v("#")]),t._v(" status&diff&commit")]),t._v(" "),s("h5",{attrs:{id:"status-查看文件状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#status-查看文件状态"}},[t._v("#")]),t._v(" status(查看文件状态)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  默认: git status\n  状态简览: git status -s\n\n  字符状态:\n   ??: 新添加的未跟踪文件\n    A: 新添加到暂存区中的文件\n  前M: 文件被修改了并放入了暂存区\n  后M: 文件被修改了但是还没放入暂存区\n\n")])])]),s("h5",{attrs:{id:"diff-查看已暂存和未暂存的修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-查看已暂存和未暂存的修改"}},[t._v("#")]),t._v(" diff(查看已暂存和未暂存的修改)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  1. 查看暂存修改信息\n  code: git diff --staged\n  或\n  code: git diff --cached\n\n\n  2. 查看未暂存修改信息\n  code: git diff\n\n  >ps: git diff 本身只显示尚未暂存的改动，而不是自上次提交以来所做的所有改动。\n\n  3. 空白错误检测\n  code: git diff --check\n\n")])])]),s("h5",{attrs:{id:"commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[t._v("#")]),t._v(" commit")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n1. 正常提交: \ncode: git commit -m 'log备注'\n\n2. 跳过暂存区域提交: \ncode: git commit -a -m 'log备注'\nps: 已跟踪过的文件的change和在暂存区的change才会commit\n\n3. 修改提交信息:\ncode: git commit --amend\nps: 可以向有记录的commit添加新的记录（解决忘记提交某些代码到某个记录）\n\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);