(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{189:function(a,t,s){"use strict";s.r(t);var e=s(6),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"打标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打标签"}},[a._v("#")]),a._v(" 打标签")]),a._v(" "),s("h5",{attrs:{id:"列出标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列出标签"}},[a._v("#")]),a._v(" 列出标签")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  查找所有标签:\n    code: git tag\n\n  根据筛选条件查找标签:\n    code: git tag -l 'v0.0*'\n")])])]),s("h5",{attrs:{id:"标签简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标签简介"}},[a._v("#")]),a._v(" 标签简介")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  Git 使用两种主要类型的标签: 轻量标签（lightweight）与附注标签（annotated）.\n  轻量标签: 一个轻量标签很像一个不会改变的分支——它只是一个特定提交的引用。\n  附注标签: 附注标签是存储在 Git 数据库中的一个完整对象。 它们是可以被校验的；其中包含打标签者的名字、电子邮件地址、日期时间；还有一个标签信息；并且可以使用 GNU Privacy Guard （GPG）签名与验证。 通常建议创建附注标签，这样你可以拥有以上所有信息；但是如果你只是想用一个临时的标签，或者因为某些原因不想要保存那些信息，轻量标签也是可用的。\n\n")])])]),s("h5",{attrs:{id:"查看标签信息和对应的提交信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看标签信息和对应的提交信息"}},[a._v("#")]),a._v(" 查看标签信息和对应的提交信息")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git show v1.4\n")])])]),s("h5",{attrs:{id:"创建附注标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建附注标签"}},[a._v("#")]),a._v(" 创建附注标签")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('  code: git tag -a v1.4 -m "my version 1.4"\n')])])]),s("h5",{attrs:{id:"创建轻量标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建轻量标签"}},[a._v("#")]),a._v(" 创建轻量标签")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  code: git tag v1.4-lw\n")])])]),s("h5",{attrs:{id:"后期打标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后期打标签"}},[a._v("#")]),a._v(" 后期打标签")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  code: git tag -a v1.2 9fceb02(hash)\n")])])]),s("h5",{attrs:{id:"共享标签-push到线上远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#共享标签-push到线上远程仓库"}},[a._v("#")]),a._v(" 共享标签(push到线上远程仓库)")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  提交单个tag:\n  code: git push origin v1.5\n\n  提交所有tag:\n  code: git push origin --tags\n")])])]),s("h5",{attrs:{id:"删除标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除标签"}},[a._v("#")]),a._v(" 删除标签")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  code: git tag -d v1.4-lw\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);