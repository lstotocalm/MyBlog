(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{182:function(t,r,e){"use strict";e.r(r);var c=e(6),a=Object(c.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"cherry-pick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick"}},[t._v("#")]),t._v(" cherry-pick")]),t._v(" "),e("p",[e("strong",[t._v("链接: https://blog.csdn.net/fightfightfight/article/details/81039050")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("简介：通过cherry-pick可以选择某次提交(commit log)合并到当前分支。")])]),t._v(" "),e("li",[e("p",[t._v("用法：")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("code: git cherry-pick [<options>] <commit-ish>...\n\n常用options:\n    --quit                退出当前的chery-pick序列\n    --continue            继续当前的chery-pick序列\n    --abort               取消当前的chery-pick序列，恢复当前分支\n    -n, --no-commit       不自动提交\n    -e, --edit            编辑提交信息\n\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("常见问题1: 当cherry-pick发生冲突，pick失败\n"),e("strong",[t._v("冲突内容")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("error: could not apply 23d9422... [Description]:branch2 commit 3\nhint: after resolving the conflicts, mark the corrected paths\nhint: with 'git add <paths>' or 'git rm <paths>'\nhint: and commit the result with 'git commit'\n")])])]),e("p",[e("strong",[t._v("解决方法")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1. 这时如果要继续cherry-pick，则首先需要解决冲突，通过git add .将文件标记为已解决，然后可以使用git cherry-pick --continue命令，继续进行cherry-pick操作。\n\n2. 如果要中断这次cherry-pick,则使用git cherry-pick --quit，这种情况下当前分支中未冲突的内容状态将为modified，\n\n3. 如果要取消这次cherry-pick,则使用git cherry-pick --abort，这种情况下当前分支恢复到cherry-pick前的状态，没有改变。\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("常见问题2: The previous cherry-pick is now empty, possibly due to conflict resolution.\n"),e("strong",[t._v("原因:")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("在cherry-pick时出现冲突，解决冲突后本地分支中内容和cherry-pick之前相比没有改变，因此当在以后的步骤中继续git cherry-pick或执行其他命令时，由于此时还处于上次cherry-pick，都会提示该信息，表示可能是由于解决冲突造成上一次cherry-pick内容是空的\n")])])]),e("p",[e("strong",[t._v("解决方法:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.执行git cherry-pick --abort取消上次操作。\n\n2.执行git commit --allow-empty,表示允许空提交。\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("常见问题3: fatal: You are in the middle of a cherry-pick – cannot amend.\n"),e("strong",[t._v("原因:")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("在cherry-pick时出现冲突，没有解决冲突就执行git commit --amend命令，从而会提示该信息\n")])])]),e("p",[e("strong",[t._v("解决方法:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git add .\ngit cherry-pick --continue\n")])])])])}),[],!1,null,null,null);r.default=a.exports}}]);