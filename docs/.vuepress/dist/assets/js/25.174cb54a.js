(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{199:function(t,a,e){"use strict";e.r(a);var s=e(6),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"子模块-submodule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子模块-submodule"}},[t._v("#")]),t._v(" 子模块(submodule)")]),t._v(" "),e("blockquote",[e("p",[t._v("参考git: https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97")])]),t._v(" "),e("h5",{attrs:{id:"_1-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1. 简介")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("有种情况我们经常会遇到：某个工作中的项目需要包含并使用另一个项目。 也许是第三方库，或者你独立开发的，用于多个父项目的库。 现在问题来了：你想要把它们当做两个独立的项目，同时又想在一个项目中使用另一个。\n\nps: 以上所说的就是公共库，子模块某种意义上就是公共库，为了多个项目公用一个模块，减少维护成本\n")])])]),e("h5",{attrs:{id:"_2-创建子模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建子模块"}},[t._v("#")]),t._v(" 2. 创建子模块")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("code: git submodule add https://github.com/chaconinc/DbConnecto [diy-project-name]\n\nps: \n  1. 默认拉下的子仓库名是 DbConnecto，如果想自定义仓库名的话可以在以上命令后面再添加 自定义仓库名就行\n  2. 产生.gitmodule, 保存了项目 URL 与已经拉取的本地目录之间的映射\n")])])]),e("h5",{attrs:{id:"_3-克隆含有子模块的项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-克隆含有子模块的项目"}},[t._v("#")]),t._v(" 3. 克隆含有子模块的项目")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("code: git clone https://github.com/chaconinc/MainProject\n\nresult: 总仓库拉取到了代码，但子仓库代码并没有拉取到。\n\nsolution-1: \n  1. 初始化本地配置文件: git submodule init \n  2. 更新提交记录: git submodule update\n\nsolution-2:\n  添加recursive参数: git clone https://github.com/chaconinc/MainProject --recursive\n")])])]),e("h5",{attrs:{id:"_4-拉取上游修改-了解即可"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-拉取上游修改-了解即可"}},[t._v("#")]),t._v(" 4. *拉取上游修改(了解即可)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("code-1: git submodule update --remote [project-name]\n\nps:\n  1. 不指定拉取子仓库分支的话，默认为master\n  2. 如果不传子仓库名，默认拉取所有子仓库\n  3. 一执行以上命令，当前分支会切换到‘游离HEAD状态’\n  4. 可以执行code-2命令拉取代码，这条命令不会改变当前分支\n\ncode-2: git submodule foreach git pull\n\n")])])]),e("h5",{attrs:{id:"_5-游离head状态-了解即可"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-游离head状态-了解即可"}},[t._v("#")]),t._v(" 5. *游离HEAD状态(了解即可)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("简介：分支处于游离HEAD状态，代表当前不在任意分支，默认会拉取master分支的最新记录。\n\n**指定拉取子仓库分支**\ncode: git config -f .gitmodules submodule.DbConnector.branch stable\nps: DbConnector是子仓库名，stable是分支名\n")])])]),e("h5",{attrs:{id:"_6-合并子仓库分支-了解即可"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-合并子仓库分支-了解即可"}},[t._v("#")]),t._v(" 6. *合并子仓库分支(了解即可)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("简介：当我们子仓库新创建了分支，想吧master分支的代码合并过来，可以通过--merge参数\ncode: git submodule update --remote --merge\n")])])]),e("h5",{attrs:{id:"_7-检验or推送子模块修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-检验or推送子模块修改"}},[t._v("#")]),t._v(" 7. 检验or推送子模块修改")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  1. 检验是否有子模块代码未提交:\n  code: git push --recurse-submodules=check\n\n  2. 推送未提交子模块代码:\n  code: git push --recurse-submodules=on-demand\n")])])]),e("h5",{attrs:{id:"_8-子模块遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-子模块遍历"}},[t._v("#")]),t._v(" 8. 子模块遍历")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1. 所有子仓库保留到stash区域\ncode: git submodule foreach 'git stash'\n\n2. 切换所有子仓库分支\ngit submodule foreach git checkout branch-name\n\n3. 拉取所有子仓库代码\ngit submodule foreach git pull\n\n4. 推送所有子仓库代码\ngit submodule foreach git push\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);