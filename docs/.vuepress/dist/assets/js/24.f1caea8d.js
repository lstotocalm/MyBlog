(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{198:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"储藏-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#储藏-stash"}},[t._v("#")]),t._v(" 储藏(stash)")]),t._v(" "),a("p",[a("strong",[t._v("ps: x的值需要根据git stash list 获取")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("把代码存储到堆栈，类似存放到仓库\n应用场景: 想要切换分支，但是还不想要提交之前的工作；所以储藏修改.\ncode: git stash  或  git stash save")])]),t._v(" "),a("li",[a("p",[t._v("查看存储列表\ncode: git stash list")])]),t._v(" "),a("li",[a("p",[t._v("应用储藏(恢复储存的代码)\n"),a("strong",[t._v("恢复最近储藏的代码")]),t._v("\ncode: git stash apply")])])]),t._v(" "),a("p",[a("strong",[t._v("恢复指定储藏的代码")]),t._v("\ncode: git stash apply stash@{x}")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[t._v("应用储藏2(在stage区域的文件不存储)\ncode: git stash --keep-index")])]),t._v(" "),a("li",[a("p",[t._v("应用储藏3(储藏所有文件，包括未跟踪文件)\ncode: git stash -u")])]),t._v(" "),a("li",[a("p",[t._v("应用储藏4(交互式储藏)\ncode: git stash --patch")])]),t._v(" "),a("li",[a("p",[t._v("应用储藏5(merge储藏, 文件冲突也可以应用储藏)\ncode: git stash --index")])]),t._v(" "),a("li",[a("p",[t._v("移除储藏记录\n"),a("strong",[t._v("移除指定储藏记录")]),t._v("\ncode: git stash drop stash@{x}")])]),t._v(" "),a("li",[a("p",[t._v("应用并删除储藏记录\n"),a("strong",[t._v("应用并删除最近记录")]),t._v("\ncode: git stash pop")])])]),t._v(" "),a("p",[a("strong",[t._v("应用并删除指定记录")]),t._v("\ncode: git stash pop stash@{x}")]),t._v(" "),a("ol",{attrs:{start:"10"}},[a("li",[t._v("从储藏创建一个分支\ncode: git stash branch new-branch")])])])}),[],!1,null,null,null);s.default=e.exports}}]);