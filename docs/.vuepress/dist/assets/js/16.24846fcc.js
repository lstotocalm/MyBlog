(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{190:function(t,e,a){"use strict";a.r(e);var s=a(6),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"reset-版本回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-版本回滚"}},[t._v("#")]),t._v(" reset(版本回滚)")]),t._v(" "),a("blockquote",[a("p",[t._v("reset回滚要指定回滚的版本，然指定版本之后的版本都会被reset")])]),t._v(" "),a("h5",{attrs:{id:"log回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log回滚"}},[t._v("#")]),t._v(" log回滚")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  根据log回滚：\n  1. 查询 log\n  git log 或者 git log --pretty=oneline\n\n  2. 拿到你想回滚的版本hash进行回滚\n  git reset e0bf01ef55996d96dae6e82619adc4d6eed1e09e\n")])])]),a("h5",{attrs:{id:"head回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#head回滚"}},[t._v("#")]),t._v(" HEAD回滚")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  简介：无论是哪种回滚方式，都是改变指针（HEAD）的指向，这里介绍快捷方式。\n\n  直接回滚最后的第二条log（也是排除当前最新commit）\n  git reset HEAD^\n")])])]),a("h5",{attrs:{id:"reset参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset参数"}},[t._v("#")]),t._v(" reset参数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  git reset --hard  //直接回滚，不保留之前的信息版本\n\n  git reset --soft  //回滚到暂存区，不保留log记录，保留提交commit内容\n\n  git reset --mixed  //直接回滚，保留log记录和提交commit内容\n\n  ps: 不传参数的情况下默认值是 --mixed\n\n")])])]),a("h5",{attrs:{id:"类别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类别"}},[t._v("#")]),t._v(" 类别")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  git reset & git reset --hard是两种概念，git reset 文件名 是取消暂存，git reset [SHA-1 | HEAD]回滚版本\n\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);